{"version":3,"sources":["components/StartPage/StartPage.tsx","components/GamePage/Question/Question.tsx","components/GamePage/Answers/Answers.tsx","components/GamePage/Table/Table.tsx","components/GamePage/GamePage.tsx","components/EndPage/EndPage.tsx","App.tsx","index.tsx"],"names":["StartPage","className","to","Question","question","Answers","answers","handleChange","map","answer","onClick","type","Table","questions","class","money","id","questionsPrizes","reverse","questionsBody","forEach","push","GamePage","props","window","history","pushState","location","href","onpopstate","go","useState","selectQuestion","setSelectQuestion","counter","setCounter","burgerClass","setBurgerClass","tableMob","setTableMob","length","aria-label","value","needButton","find","includes","trueButton","trueAnswers","setTimeout","setFinalScore","back","style","display","EndPage","finalScore","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce4cf356.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './startPage.css';\n\nexport const StartPage: React.FC = () => (\n  <div className=\"startPage\">\n    <div className=\"startPage__container\">\n      <div className=\"startPage__picture\" />\n    </div>\n    <div className=\"startPage__content\">\n      <h1>\n        Who wants to be a millionaire?\n      </h1>\n      <Link to=\"./game\" className=\"startPage__button\">\n        Start\n      </Link>\n    </div>\n  </div>\n);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './question.css';\n\ninterface QuestionProps {\n  question: string;\n}\n\nexport const Question: React.FC<QuestionProps> = ({ question }) => (\n  <div className=\"question\">\n    {question}\n  </div>\n);\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './answers.css';\n\ninterface AnswersProps {\n  answers: string[][],\n  handleChange(value: string): void,\n}\n\nexport const Answers: React.FC<AnswersProps> = ({ answers, handleChange }) => (\n  <div className=\"answers\">\n    {answers.map((answer) => (\n      <button\n        key={answer[0]}\n        className={answer[2]}\n        onClick={() => handleChange(answer[1])}\n        type=\"button\"\n      >\n        <p className=\"answers__answer-letter\">\n          {answer[0]}\n        </p>\n        <p className=\"answers__answer-content\">\n          {answer[1]}\n        </p>\n      </button>\n    ))}\n  </div>\n);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './table.css';\nimport { QuestionType } from '../../../interfaces';\n\ninterface TableProps {\n  questions: QuestionType[]\n}\n\nexport const Table: React.FC<TableProps> = ({ questions }) => (\n  <ul className=\"table\">\n    {questions.map((question) => (\n      <li key={question.id} className={question.class}>\n        <p>\n          {question.money}\n        </p>\n      </li>\n    ))}\n  </ul>\n);\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport './gamePage.css';\nimport { Question } from './Question/Question';\nimport { Answers } from './Answers/Answers';\nimport { Table } from './Table/Table';\nimport questions from '../../api/questions.json';\nimport { QuestionType } from '../../interfaces';\n\nconst questionsPrizes: QuestionType[] = [...questions].map((question) => ({\n  ...question,\n  class: 'table__item-future',\n}));\n\nquestionsPrizes.reverse();\n\nconst questionsBody: QuestionType[] = [...questions];\n\nquestionsBody.forEach((question) => (\n  question.answers.map((answer) => (\n    answer.push('answers__button')\n  ))\n));\n\ninterface GamePageProps {\n  setFinalScore(finalScore: string): void\n}\n\nexport const GamePage: React.FC<GamePageProps> = (props) => {\n  window.history.pushState(null, 'null', window.location.href);\n  window.onpopstate = function event() {\n    window.history.go(1);\n  };\n\n  const [selectQuestion, setSelectQuestion] = useState<number>(0);\n  const [counter, setCounter] = useState<number>(0);\n  const [burgerClass, setBurgerClass] = useState<string>('gamePage__burger-open');\n  const [tableMob, setTableMob] = useState<string>('none');\n\n  questionsPrizes[questionsPrizes.length - selectQuestion - 1].class = 'table__item-selected';\n\n  const handleChange = (value: string) => {\n    const needButton: string[] = questionsBody[selectQuestion].answers.find((answer) => (\n      answer.includes(value)\n    )) ?? [];\n    const trueButton: string[] = questionsBody[selectQuestion].answers.find((answer) => (\n      answer.includes(questionsBody[selectQuestion].trueAnswers[0])\n    )) ?? [];\n\n    if (counter === 0) {\n      needButton[2] = 'answers__button-selected';\n      setCounter(1);\n\n      setTimeout(() => {\n        if (questionsPrizes[questionsPrizes.length - selectQuestion - 1].trueAnswers\n          .includes(value)) {\n          needButton[2] = 'answers__button-true';\n          setCounter(2);\n        } else {\n          needButton[2] = 'answers__button-false';\n          trueButton[2] = 'answers__button-true';\n          setCounter(2);\n        }\n      }, 1000);\n\n      setTimeout(() => {\n        if (selectQuestion === 11) {\n          props.setFinalScore(questionsPrizes[questionsPrizes.length - selectQuestion - 1].money);\n          window.history.pushState(null, 'null', './end');\n          window.history.pushState(null, 'null', './end');\n          window.history.back();\n          return;\n        }\n\n        if (questionsPrizes[questionsPrizes.length - selectQuestion - 1].trueAnswers\n          .includes(value)) {\n          questionsPrizes[questionsPrizes.length - selectQuestion - 1].class = 'table__item-past';\n          setSelectQuestion(selectQuestion + 1);\n          setCounter(0);\n        } else {\n          if (selectQuestion > 0) {\n            props.setFinalScore(questionsPrizes[questionsPrizes.length - selectQuestion].money);\n          }\n\n          window.history.pushState(null, 'null', './end');\n          window.history.pushState(null, 'null', './end');\n          window.history.back();\n        }\n      }, 2500);\n    }\n  };\n\n  const openBurger = (): void => {\n    if (burgerClass === 'gamePage__burger-open') {\n      setBurgerClass('gamePage__burger-close');\n      setTableMob('flex');\n    } else {\n      setBurgerClass('gamePage__burger-open');\n      setTableMob('none');\n    }\n  };\n\n  return (\n    <div className=\"gamePage\">\n      <div className=\"gamePage__content\">\n        <button\n          type=\"button\"\n          className={burgerClass}\n          onClick={openBurger}\n          aria-label=\"open\"\n        />\n        <div className=\"gamePage__answerBlock\">\n          <Question question={questions[selectQuestion].question} />\n          <Answers\n            answers={questionsBody[selectQuestion].answers}\n            handleChange={handleChange}\n          />\n        </div>\n      </div>\n      <div className=\"gamePage__tableBlock-mobile\" style={{ display: tableMob }}>\n        <Table questions={questionsPrizes} />\n      </div>\n      <div className=\"gamePage__tableBlock\">\n        <Table questions={questionsPrizes} />\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './endPage.css';\n\ninterface EndPageProps {\n  finalScore: string,\n}\n\nexport const EndPage: React.FC<EndPageProps> = ({ finalScore }) => {\n  const goStart = () => {\n    window.location.href = './who_tests';\n  };\n\n  window.history.pushState(null, 'null', window.location.href);\n  window.onpopstate = function event() {\n    window.history.go(1);\n  };\n\n  return (\n    <div className=\"endPage\">\n      <div className=\"endPage__container\">\n        <div className=\"endPage__picture\" />\n      </div>\n      <div className=\"endPage__content\">\n        <h1>\n          {finalScore}\n          &nbsp;\n          earned\n        </h1>\n        <button\n          type=\"button\"\n          className=\"endPage__button\"\n          onClick={goStart}\n        >\n          Try again\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport { StartPage } from './components/StartPage/StartPage';\nimport { GamePage } from './components/GamePage/GamePage';\nimport { EndPage } from './components/EndPage/EndPage';\nimport './App.css';\n\nexport const App: React.FC = () => {\n  const [finalScore, setFinalScore] = useState<string>('$0');\n\n  return (\n    <Switch>\n      <Route path=\"/home\" exact component={StartPage} />\n      <Route path=\"/game\">\n        <GamePage setFinalScore={setFinalScore} />\n      </Route>\n      <Route path=\"/end\">\n        <EndPage finalScore={finalScore} />\n      </Route>\n      <Redirect to=\"/home\" />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport './reset.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}